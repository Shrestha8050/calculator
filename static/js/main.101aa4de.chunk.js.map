{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearBTN.js","App.js","index.js"],"names":["isEqual","value","Button","children","handleClick","className","isNaN","onClick","Input","props","input","ClearBTN","handleClear","App","useState","setInput","addToInput","math","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAKMA,G,YAAU,SAACC,GACf,MAAiB,MAAVA,IAeMC,EAbA,SAAC,GAA+B,IAN3BD,EAMFE,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC1B,OACE,yBACEC,UAAS,0BATKJ,EAUDE,EATTG,MAAML,IAAoB,MAAVA,GAA2B,MAAVA,EASH,WAAT,QADhB,YAELD,EAAQG,GAAY,QAAU,QAClCI,QAAS,kBAAMH,EAAYD,KAE1BA,ICVQK,G,MAJD,SAACC,GACb,OAAO,yBAAKJ,UAAU,SAASI,EAAMC,SCOxBC,G,MARE,SAACF,GAChB,OACE,yBAAKJ,UAAU,QAAQE,QAAS,kBAAME,EAAMG,gBACzCH,EAAMN,Y,QCkDEU,MAhDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNJ,EADM,KACCK,EADD,KAGPC,EAAa,SAACf,GAClBc,EAASL,EAAQT,IAQnB,OACE,yBAAKI,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CAAOK,MAAOA,IACd,yBAAKL,UAAU,OACb,kBAAC,EAAD,CAAQD,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,OAE5C,yBAAKE,UAAU,OACb,kBAAC,EAAD,CAAQD,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,OAE5C,yBAAKE,UAAU,OACb,kBAAC,EAAD,CAAQD,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,OAE5C,yBAAKE,UAAU,OACb,kBAAC,EAAD,CAAQD,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,MAC1C,kBAAC,EAAD,CAAQC,YAAa,WA9BvBM,GACFK,EAASE,IAAcP,KA6BuBP,SAAS,MACnD,kBAAC,EAAD,CAAQC,YAAaY,EAAYb,SAAS,OAE5C,yBAAKE,UAAU,OACb,kBAAC,EAAD,CAAOO,YAAa,kBAAMG,EAAS,MAAnC,aC3CVG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.101aa4de.chunk.js","sourcesContent":["import React from 'react';\r\nimport './button.css';\r\nconst isOperator = (value) => {\r\n  return !isNaN(value) || value === '.' || value === '=';\r\n};\r\nconst isEqual = (value) => {\r\n  return value === '=';\r\n};\r\nconst Button = ({ children, handleClick }) => {\r\n  return (\r\n    <div\r\n      className={`button-wrapper ${\r\n        isOperator(children) ? 'null' : 'operator'\r\n      } ${isEqual(children) ? 'equal' : 'null'}`}\r\n      onClick={() => handleClick(children)}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './input.css';\r\nconst Input = (props) => {\r\n  return <div className='input'>{props.input}</div>;\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport './clear.css';\r\nconst ClearBTN = (props) => {\r\n  return (\r\n    <div className='clear' onClick={() => props.handleClear()}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClearBTN;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport Clear from './components/ClearBTN';\nimport * as math from 'mathjs';\n\nfunction App() {\n  const [input, setInput] = useState('');\n\n  const addToInput = (value) => {\n    setInput(input + value);\n  };\n  const HandleEqual = () => {\n    if (input) {\n      setInput(math.evaluate(input));\n    }\n  };\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        <Input input={input} />\n        <div className='row'>\n          <Button handleClick={addToInput} children='7' />\n          <Button handleClick={addToInput} children='8' />\n          <Button handleClick={addToInput} children='9' />\n          <Button handleClick={addToInput} children='/' />\n        </div>\n        <div className='row'>\n          <Button handleClick={addToInput} children='4' />\n          <Button handleClick={addToInput} children='5' />\n          <Button handleClick={addToInput} children='6' />\n          <Button handleClick={addToInput} children='*' />\n        </div>\n        <div className='row'>\n          <Button handleClick={addToInput} children='1' />\n          <Button handleClick={addToInput} children='2' />\n          <Button handleClick={addToInput} children='3' />\n          <Button handleClick={addToInput} children='+' />\n        </div>\n        <div className='row'>\n          <Button handleClick={addToInput} children='.' />\n          <Button handleClick={addToInput} children='0' />\n          <Button handleClick={() => HandleEqual()} children='=' />\n          <Button handleClick={addToInput} children='-' />\n        </div>\n        <div className='row'>\n          <Clear handleClear={() => setInput('')}>clear</Clear>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}